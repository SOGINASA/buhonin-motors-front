import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useQuery, useMutation, useQueryClient } from 'react-query';
import api from '../../services/api';
import LoadingSpinner from '../../components/UI/LoadingSpinner';
import Pagination from '../../components/Common/Pagination';

const MyListingsPage = () => {
  const [currentPage, setCurrentPage] = useState(1);
  const [statusFilter, setStatusFilter] = useState('all');
  const [sortBy, setSortBy] = useState('date_desc');
  const navigate = useNavigate();
  const queryClient = useQueryClient();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  const { data: listings, isLoading, error } = useQuery(
    ['my-listings', currentPage, statusFilter, sortBy],
    () => api.get('/api/listings/my', {
      params: {
        page: currentPage,
        limit: 10,
        status: statusFilter !== 'all' ? statusFilter : undefined,
        sort: sortBy
      }
    }),
    {
      keepPreviousData: true
    }
  );

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º
  const actionMutation = useMutation(
    ({ listingId, action }) => api.post(`/api/listings/${listingId}/action`, { action }),
    {
      onSuccess: () => {
        queryClient.invalidateQueries('my-listings');
        alert('–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
      },
      onError: (error) => {
        alert('–û—à–∏–±–∫–∞: ' + (error.response?.data?.message || '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'));
      }
    }
  );

  const handleAction = (listingId, action, confirmMessage) => {
    if (confirmMessage && !window.confirm(confirmMessage)) {
      return;
    }
    actionMutation.mutate({ listingId, action });
  };

  const handlePageChange = (page) => {
    setCurrentPage(page);
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  if (isLoading) return <LoadingSpinner text="–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è..." />;

  if (error) {
    return (
      <div style={{
        textAlign: 'center',
        padding: '60px 20px',
        backgroundColor: 'white',
        borderRadius: '8px',
        border: '1px solid #ddd'
      }}>
        <h3 style={{ color: '#dc3545', marginBottom: '10px' }}>
          –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        </h3>
        <p style={{ color: '#666' }}>
          –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
        </p>
      </div>
    );
  }

  const listingsData = listings?.data?.listings || [];
  const totalPages = Math.ceil((listings?.data?.total || 0) / 10);
  const totalCount = listings?.data?.total || 0;

  return (
    <div style={{ maxWidth: '1000px', margin: '0 auto' }}>
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '20px'
      }}>
        <h1 style={{ margin: 0 }}>–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è ({totalCount})</h1>
        <Link
          to="/create-listing"
          style={{
            padding: '10px 20px',
            backgroundColor: '#28a745',
            color: 'white',
            textDecoration: 'none',
            borderRadius: '4px',
            fontWeight: 'bold'
          }}
        >
          ‚ûï –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
        </Link>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '20px',
        padding: '15px',
        backgroundColor: 'white',
        borderRadius: '8px',
        border: '1px solid #ddd'
      }}>
        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>
          <span style={{ fontSize: '14px', color: '#666' }}>–°—Ç–∞—Ç—É—Å:</span>
          <select
            value={statusFilter}
            onChange={(e) => setStatusFilter(e.target.value)}
            style={{
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              backgroundColor: 'white'
            }}
          >
            <option value="all">–í—Å–µ</option>
            <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
            <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫–∏</option>
            <option value="moderation">–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</option>
            <option value="sold">–ü—Ä–æ–¥–∞–Ω–Ω—ã–µ</option>
            <option value="archived">–ê—Ä—Ö–∏–≤</option>
            <option value="expired">–ò—Å—Ç–µ–∫—à–∏–µ</option>
          </select>
        </div>

        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>
          <span style={{ fontSize: '14px', color: '#666' }}>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</span>
          <select
            value={sortBy}
            onChange={(e) => setSortBy(e.target.value)}
            style={{
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              backgroundColor: 'white'
            }}
          >
            <option value="date_desc">–°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ</option>
            <option value="date_asc">–°–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ</option>
            <option value="views_desc">–ü–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º</option>
            <option value="price_desc">–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤.)</option>
            <option value="price_asc">–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä.)</option>
          </select>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π */}
      {listingsData.length === 0 ? (
        <div style={{
          textAlign: 'center',
          padding: '60px 20px',
          backgroundColor: 'white',
          borderRadius: '8px',
          border: '1px solid #ddd'
        }}>
          <div style={{ fontSize: '48px', marginBottom: '15px' }}>üìã</div>
          <h3 style={{ marginBottom: '10px' }}>
            {statusFilter === 'all' ? '–£ –≤–∞—Å –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π' : `–ù–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "${statusFilter}"`}
          </h3>
          <p style={{ color: '#666', marginBottom: '20px' }}>
            –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å
          </p>
          <Link
            to="/create-listing"
            style={{
              display: 'inline-block',
              padding: '12px 24px',
              backgroundColor: '#28a745',
              color: 'white',
              textDecoration: 'none',
              borderRadius: '4px',
              fontWeight: 'bold'
            }}
          >
            –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
          </Link>
        </div>
      ) : (
        <>
          <div style={{
            backgroundColor: 'white',
            borderRadius: '8px',
            border: '1px solid #ddd',
            overflow: 'hidden'
          }}>
            {listingsData.map((listing, index) => (
              <ListingItem
                key={listing.listing_id}
                listing={listing}
                isLast={index === listingsData.length - 1}
                onAction={handleAction}
                onEdit={() => navigate(`/edit-listing/${listing.listing_id}`)}
                onView={() => navigate(`/listings/${listing.listing_id}`)}
              />
            ))}
          </div>

          {totalPages > 1 && (
            <div style={{ marginTop: '20px' }}>
              <Pagination
                currentPage={currentPage}
                totalPages={totalPages}
                onPageChange={handlePageChange}
              />
            </div>
          )}
        </>
      )}
    </div>
  );
};

const ListingItem = ({ listing, isLast, onAction, onEdit, onView }) => {
  const formatPrice = (price, currency) => {
    if (!price) return '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    return new Intl.NumberFormat('ru-KZ').format(price) + ' ' + (currency || '‚Ç∏');
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  const getStatusColor = (status) => {
    const colors = {
      active: '#28a745',
      draft: '#6c757d',
      moderation: '#ffc107',
      sold: '#007bff',
      archived: '#6c757d',
      expired: '#dc3545',
      rejected: '#dc3545'
    };
    return colors[status] || '#6c757d';
  };

  const getStatusText = (status) => {
    const texts = {
      active: '–ê–∫—Ç–∏–≤–Ω–æ',
      draft: '–ß–µ—Ä–Ω–æ–≤–∏–∫',
      moderation: '–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
      sold: '–ü—Ä–æ–¥–∞–Ω–æ',
      archived: '–í –∞—Ä—Ö–∏–≤–µ',
      expired: '–ò—Å—Ç–µ–∫ —Å—Ä–æ–∫',
      rejected: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ'
    };
    return texts[status] || status;
  };

  return (
    <div style={{
      padding: '20px',
      borderBottom: isLast ? 'none' : '1px solid #eee'
    }}>
      <div style={{ display: 'flex', gap: '20px' }}>
        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
        <div style={{
          width: '150px',
          height: '100px',
          backgroundColor: '#f5f5f5',
          borderRadius: '8px',
          overflow: 'hidden',
          flexShrink: 0,
          cursor: 'pointer'
        }} onClick={onView}>
          <img
            src={listing.main_image_url || '/placeholder-car.jpg'}
            alt={listing.title}
            style={{
              width: '100%',
              height: '100%',
              objectFit: 'cover'
            }}
            onError={(e) => {
              e.target.src = '/placeholder-car.jpg';
            }}
          />
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div style={{ flex: 1, minWidth: 0 }}>
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'flex-start',
            marginBottom: '10px'
          }}>
            <h3 style={{
              margin: 0,
              fontSize: '18px',
              fontWeight: 'bold',
              cursor: 'pointer',
              color: '#007bff'
            }} onClick={onView}>
              {listing.title}
            </h3>

            <div style={{
              padding: '4px 8px',
              borderRadius: '4px',
              fontSize: '12px',
              fontWeight: 'bold',
              color: 'white',
              backgroundColor: getStatusColor(listing.status),
              whiteSpace: 'nowrap'
            }}>
              {getStatusText(listing.status)}
            </div>
          </div>

          <div style={{
            fontSize: '20px',
            fontWeight: 'bold',
            color: '#007bff',
            marginBottom: '10px'
          }}>
            {formatPrice(listing.price, listing.currency_code)}
          </div>

          <div style={{
            display: 'flex',
            gap: '20px',
            fontSize: '14px',
            color: '#666',
            marginBottom: '15px'
          }}>
            <span>üìÖ {formatDate(listing.created_date)}</span>
            <span>üëÅ {listing.view_count || 0} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
            <span>‚ù§Ô∏è {listing.favorite_count || 0} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º</span>
            {listing.expires_date && (
              <span>‚è∞ –î–æ {formatDate(listing.expires_date)}</span>
            )}
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
            <button
              onClick={onView}
              style={{
                padding: '6px 12px',
                backgroundColor: '#007bff',
                color: 'white',
                border: 'none',
                borderRadius: '4px',
                cursor: 'pointer',
                fontSize: '12px'
              }}
            >
              üëÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
            </button>

            {(listing.status === 'active' || listing.status === 'draft') && (
              <button
                onClick={onEdit}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#ffc107',
                  color: '#333',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px'
                }}
              >
                ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </button>
            )}

            {listing.status === 'active' && (
              <>
                <button
                  onClick={() => onAction(listing.listing_id, 'deactivate', '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?')}
                  style={{
                    padding: '6px 12px',
                    backgroundColor: '#6c757d',
                    color: 'white',
                    border: 'none',
                    borderRadius: '4px',
                    cursor: 'pointer',
                    fontSize: '12px'
                  }}
                >
                  ‚è∏ –°–Ω—è—Ç—å —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                </button>
                <button
                  onClick={() => onAction(listing.listing_id, 'mark_sold', '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω–æ–µ?')}
                  style={{
                    padding: '6px 12px',
                    backgroundColor: '#28a745',
                    color: 'white',
                    border: 'none',
                    borderRadius: '4px',
                    cursor: 'pointer',
                    fontSize: '12px'
                  }}
                >
                  ‚úÖ –ü—Ä–æ–¥–∞–Ω–æ
                </button>
              </>
            )}

            {listing.status === 'draft' && (
              <button
                onClick={() => onAction(listing.listing_id, 'publish')}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#28a745',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px'
                }}
              >
                üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
              </button>
            )}

            {listing.status === 'expired' && (
              <button
                onClick={() => onAction(listing.listing_id, 'renew')}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#17a2b8',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px'
                }}
              >
                üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å
              </button>
            )}

            <button
              onClick={() => onAction(listing.listing_id, 'delete', '–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ?')}
              style={{
                padding: '6px 12px',
                backgroundColor: '#dc3545',
                color: 'white',
                border: 'none',
                borderRadius: '4px',
                cursor: 'pointer',
                fontSize: '12px'
              }}
            >
              üóë –£–¥–∞–ª–∏—Ç—å
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MyListingsPage;